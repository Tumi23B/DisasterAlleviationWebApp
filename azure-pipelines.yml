trigger:
- main   # or master depending on your repo branch name

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
# Install correct .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.0.x'   # change to 7.0.x or 8.0.x if needed
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Restore NuGet packages
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

# Build the project
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# (Optional for later) Run tests
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'test'
#     projects: '**/*Tests/*.csproj'
#     arguments: '--configuration $(buildConfiguration)'

# Publish build output (zip artifact)
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

# Save artifacts (so you can deploy later)
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
    publishLocation: 'Container'
